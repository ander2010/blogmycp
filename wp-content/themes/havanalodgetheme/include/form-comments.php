<?php


add_shortcode('comments-form', 'show_comments');
function show_comments( $atts ){

    /**
     * Show only in Single and Product page
     */
    $wpad_frontend_comment_form = new wpad_frontend_comment_form();

    if( $wpad_frontend_comment_form->check_single_product_page() == false ){
        return;
    }

    extract(
        shortcode_atts(
            array(
                'id' => '',
                'layout' => ''
            ), $atts
        )
    );

    $data = get_option( 'wpad_comment_form' );

    $layout = '';

    $guest_comment = $wpad_frontend_comment_form->check_guest_privalage( $data , $atts );

    $content = '';

    if( empty($data) || !is_numeric($id) ){
        return;
    }

    foreach( $data as $key => $value ):

        if( $key == $id ):

            ob_start();

            // *************************************************
            // If Unpublished is selected then dont show the form
            // *************************************************

            $wpad_frontend_comment_form->one_column_design( $data[$id]['other']['no_of_column'] );

            if( $data[$id]['other']['comment_status'] == 'unpublished' ){
                return;
            }

            if( $data[$id]['other']['comment_status'] == 'trash' ){
                if( current_user_can( 'administrator' ) ){
                    $wpad_remove_default_comment_tag = new wpad_remove_default_comment_tag();

                    $wpad_remove_default_comment_tag->warning_css();
                    echo '<div class="wpad_notice">The comment form [wpad-comment-form id="' . $id . '"] is in trash so cannot be displayed here. If you want to show the comment form here please untrash it. This message was generated by the WP Advanced Comment. This message is shown to the administrator only.</div>';
                }

                return;
            }
            $wpad_frontend_comment_form->repost_comment_section();
            $wpad_frontend_comment_form->report_thank_you();
            ?>
            <form id="wp_advance_comment_form" method="post" class="wpad_form_horizontal">

                <span name="wpad_layout" style="display:none;"></span>

                <input type="hidden" name="wpad_form_id_list" value="<?php echo $key; ?>">

                <?php

                /**
                 * If WooCommerce Product Page
                 * If WooCommerce Advanced Product Reviews enabled
                 * If WooCommerce enabled
                 * If Verified Customer Reviews is checked(enable)
                 */

                if( function_exists( 'is_product' ) && is_product() && class_exists( 'wpad_woocommerce' ) && class_exists( 'WooCommerce' ) && !empty( $data[$id]['other']['verified_customer_review'] ) && $data[$id]['other']['verified_customer_review'] == 'enable' ){

                    if( $wpad_frontend_comment_form->check_woo_verified_user() == true ){

                        // If purchased
                        display_form_user( $data , $id , $atts );

                    } else {

                        $args = array();
                        $args['reply_title'] = __( 'Leave a Reply' , 'wpad' );
                        $args['logged_in_message'] = __( 'Customers who have purchased this product may only leave a review.' , 'wpad' );
                        $args['non_logged_in_message'] = __( 'Only logged in customers who have purchased this product may leave a review.' , 'wpad' );

                        $args = apply_filters( 'wpad_woocommerce_purchase_msg' , $args ); ?>

                        <div class="wpad_comment_fields_wrapper not_logged_in_wrapper">

                            <p><strong><?php echo $args['reply_title']; ?></strong></p>

                            <?php
                            if( is_user_logged_in() ){

                                echo '<p class="must-log-in loggin_comment">';
                                echo $args['logged_in_message'];
                                echo '</p>';

                            } else {

                                // If not purchased
                                echo '<p class="must-log-in loggin_comment">';
                                echo $args['non_logged_in_message']; ?>
                                <a href="<?php echo wp_login_url( get_permalink() ); ?>" title="Login">
                                    <?php _e( 'Click Here' , 'wpad' ); ?></a>

                                <?php
                                _e( ' to login' , 'wpad' );
                                echo '</p>';

                            } ?>

                        </div>

                        <?php
                    }

                } else {

                    if( $guest_comment == true && !is_user_logged_in() ){

                        /*
                       ** If user is not logged in and Guest comment is enable
                       */

                        display_form_user( $data , $id , $atts );

                    } elseif( is_user_logged_in() ) {

                        /*
                       ** If user is logged in
                       */

                        display_form_user( $data , $id , $atts );

                    } else { ?>

                        <div class="wpad_comment_fields_wrapper not_logged_in_wrapper">

                            <h3><?php _e( 'Leave a Reply' , 'wpad' ); ?></h3>
                            <?php echo '<p class="must-log-in loggin_comment">' .
                                sprintf(
                                    __( 'You must be <a href="%s">logged in</a> to post a comment.' ),
                                    wp_login_url( apply_filters( 'the_permalink', get_permalink() ) )
                                ) . '</p>'; ?>

                        </div>

                        <?php
                    }

                }

                ?>

            </form>
            <?php

            $required_rules = $wpad_frontend_comment_form->jquery_validate_rules( $data[$id] );

            $required_messages = $wpad_frontend_comment_form->jquery_validate_messages( $data[$id] );
            wp_reset_postdata(); wp_reset_query();
            global $post;
            ?>
            <script>

                function get_user_image_file( selected , key ){

                    var id = selected.find('input').attr( 'id' );
                    var file = document.getElementById( id );
                    var file_val = file.files[0];

                    datas.append( key + "[]" , file_val);

                }

                jQuery( document ).ready( function(){

                    window.wpad_rules = <?php echo $required_rules; ?>;
                    window.wpad_message = <?php echo $required_messages; ?>;

                    jQuery("#wp_advance_comment_form").validate({

                        errorElement: "div",
                        errorClass : 'wpad_error_fields',

                        errorPlacement: function(error, element) {
                            error.appendTo( element.closest("div").next(".wpad_error").show() )
                        },

                        unhighlight: function(element) {
                            jQuery(element).removeClass('wpad_error_fields');
                            jQuery(element).closest('div').next('.wpad_error').hide();
                        },

                        highlight: function(element) {
                            jQuery(element).addClass('wpad_error_fields');
                            jQuery(element).closest('div').next('.wpad_error').show();
                        },

                        invalidHandler: function(form, validator) {
                            if (!validator.numberOfInvalids())
                                return;
                            jQuery('html, body').animate({
                                scrollTop: jQuery(validator.errorList[0].element).offset().top-50
                            }, 1000);
                        },

                        rules : wpad_rules,
                        messages : wpad_message,

                        submitHandler: function(form) {
                            var meta_key = '';
                            datas = new FormData();
                            datas.append( 'action', 'wpad_save_comment' );
                            datas.append( 'post_id', "<?php echo $post->ID; ?>" );
                            datas.append( 'form_id', jQuery('input[name=wpad_comment_form_id]').val() );
                            datas.append( 'email_me_on_approve' , jQuery('input[name=notification_approved_comment]:checked').val() )
                            jQuery('#wp_advance_comment_form .wpad_form_group').each( function(i){
                                meta_key = jQuery(this).attr('ids');

                                switch( meta_key ){

                                    case 'wpad_user_name':
                                        datas.append( 'user_name[meta_value]', jQuery(this).find( 'input' ).val() );
                                        datas.append( 'user_name[meta_key]', jQuery(this).find( 'input' ).attr('key') );
                                        break;

                                    case 'wpad_user_email':
                                        datas.append( 'user_email[meta_value]', jQuery(this).find( 'input' ).val() );
                                        datas.append( 'user_email[meta_key]', jQuery(this).find( 'input' ).attr('key') );
                                        break;

                                    case 'wpad_comment':
                                        datas.append( 'comment[meta_value]' , jQuery(this).find( 'textarea' ).val() );
                                        datas.append( 'comment[meta_key]', 'comment' );
                                        break;

                                    case 'wpad_text_element':
                                        datas.append( 'text[meta_value][' + i + ']' , jQuery(this).find( 'input' ).val() );
                                        datas.append( 'text[meta_key][' + i + ']' , jQuery(this).find( 'input' ).attr('key') );
                                        break;

                                    case 'wpad_textarea_element':
                                        datas.append( 'textarea[meta_value][' + i + ']' , jQuery(this).find( 'textarea' ).val() );
                                        datas.append( 'textarea[meta_key][' + i + ']' , jQuery(this).find( 'textarea' ).attr('key') );
                                        break;

                                    case 'wpad_radio_element':
                                        datas.append( 'radio[meta_value][' + i + ']' , jQuery(this).find( 'input[type=radio]:checked' ).val() );
                                        datas.append( 'radio[meta_key][' + i + ']' , jQuery(this).find( 'input[type=radio]' ).attr('key') );
                                        break;

                                    case 'wpad_checkbox_element':
                                        var selected = [];
                                        jQuery(this).find( 'input[type=checkbox]:checked' ).each(function() {
                                            selected.push( jQuery(this).val() );
                                        });
                                        datas.append( 'checkbox[meta_value][' + i + ']' , selected );
                                        datas.append( 'checkbox[meta_key][' + i + ']' , jQuery(this).find( 'input[type=checkbox]:checked' ).attr('key') );
                                        break;

                                    case 'wpad_select_element':
                                        datas.append( 'select[meta_value][' + i + ']' , jQuery(this).find( 'select' ).val() );
                                        datas.append( 'select[meta_key][' + i + ']' , jQuery(this).find( 'select' ).attr('key') );
                                        break;

                                    case 'wpad_email_element':
                                        datas.append( 'email[meta_value][' + i + ']' , jQuery(this).find( 'input' ).val() );
                                        datas.append( 'email[meta_key][' + i + ']' , jQuery(this).find( 'input' ).attr('key') );
                                        break;

                                    case 'wpad_url_element':
                                        datas.append( 'url[meta_value][' + i + ']' , jQuery(this).find( 'input' ).val() );
                                        datas.append( 'url[meta_key][' + i + ']' , jQuery(this).find( 'input' ).attr('key') );
                                        break;

                                    case 'wpad_multi_select_element':
                                        datas.append( 'multiselect[meta_value][' + i + ']' , jQuery(this).find( 'select' ).val() );
                                        datas.append( 'multiselect[meta_key][' + i + ']' , jQuery(this).find( 'select' ).attr('key') );
                                        break;

                                    case 'wpad_user_image_element':
                                        get_user_image_file( jQuery(this) , jQuery(this).find( 'input' ).attr('key') );
                                        datas.append( 'user_image[meta_key][' + i + ']' , jQuery(this).find( 'input' ).attr('key') );
                                        break;

                                    default:
                                        break;

                                }

                            });

                            jQuery.ajax({
                                url : "<?php echo admin_url('admin-ajax.php'); ?>",
                                type : 'POST',
                                data : datas,
                                processData: false,
                                contentType: false,
                                beforeSend : function(){
                                    jQuery('.wpad_submit_loader').show();
                                },
                                success : function(){
                                    jQuery('.wpad_submit_loader').hide();
                                    jQuery('#wp_advance_comment_form')[0].reset();

                                    // Reset preview image
                                    jQuery('.wpad_image_preview').attr( 'src' , '' ).hide();

                                    jQuery('.wpad_success_comment').show();
                                    jQuery('html, body').animate({
                                        scrollTop: jQuery('.wpad_success_comment').offset().top-50
                                    }, 'fast' );
                                }
                            });
                        }
                    });
                });
            </script>
            <?php
            $content .= ob_get_clean();
        endif;
    endforeach;
    return $content;
}

function display_form_user( $data , $id , $atts ){

    // *******************************************
    // If show comments selected disable the form
    // *******************************************
    $wpad_frontend_comment_form = new wpad_frontend_comment_form();

    if( $data[$id]['other']['comment_status'] != 'show_comments' ){  ?>
        <div class="wpad_success_comment" style="display:none">
            <p><?php _e( "Tu testimonio esta esperando aprobación" , 'hl' ); ?></p>
        </div>
        <div class="wpad_comment_fields_wrapper">
            <p><strong><?php _e( "Dejanos tu testimonio" , 'hl' ); ?></strong></p>
            <?php
            foreach( $data[$id] as $elements  ):
                if( is_array($elements) ){
                    $meta_key = !empty($elements['meta_key']) ? $elements['meta_key'] : '';
                    do_action( 'wpad_before_field_' . $meta_key );
                    if( !empty($elements['custom_field']) ){
                        switch ( $elements['custom_field'] ) {
                            case 'text':
                                $wpad_frontend_comment_form->get_text_field( $elements );
                                break;
                            case 'user_name':
                                $wpad_frontend_comment_form->get_user_name( $elements , $atts );
                                break;
                            case 'user_email':
                                $wpad_frontend_comment_form->get_email_required_field( $elements , $atts );
                                break;
                            case 'comment_area':
                                $wpad_frontend_comment_form->get_comment_field( $elements );
                                break;
                            case 'textarea':
                                $wpad_frontend_comment_form->get_textarea_field( $elements );
                                break;
                            case 'radio':
                                $wpad_frontend_comment_form->get_radio_field( $elements );
                                break;
                            case 'checkbox':
                                $wpad_frontend_comment_form->get_checkbox_field( $elements );
                                break;
                            case 'select':
                                $wpad_frontend_comment_form->get_select_field( $elements );
                                break;
                            case 'email':
                                $wpad_frontend_comment_form->get_email_field( $elements );
                                break;
                            case 'url':
                                $wpad_frontend_comment_form->get_url_field( $elements );
                                break;
                            case 'multi_select':
                                $wpad_frontend_comment_form->get_multi_select_field( $elements );
                                break;
                            case 'section_break':
                                $wpad_frontend_comment_form->get_section_break( $elements );
                                break;
                            case 'html':
                                $wpad_frontend_comment_form->get_html( $elements );
                                break;
                            case 'user_image':
                                $wpad_frontend_comment_form->get_user_image( $elements );
                                break;
                            default:
                                break;
                        }
                    }

                    do_action( 'wpad_after_field_' . $meta_key );

                }

            endforeach;

            // Enable/Disable the approved comment checkbox
            //$wpad_frontend_comment_form->comment_approved_message_checkbox( $id , $data ); ?>

        </div>

        <div class="wpad_form_group">
            <label></label>
            <div class="input_container">
                <input type="hidden" name="wpad_comment_form_id" value="<?php echo $id; ?>">
                <input type="hidden" name="wpad_comment_form" value="1">
                <?php $submit_name = !empty( $data[$id]['other']['submit_label'] ) ? $data[$id]['other']['submit_label'] : 'Submit'; ?>
                <input type="submit" class="wpad_submit_comment wpad_btn wpad_primary btn btn-sm btn-info" value="<?php echo $submit_name; ?>">
                <img style="display:none" class="wpad_submit_loader" src="<?php echo includes_url('/images/spinner.gif'); ?>">
            </div>
        </div>
        <?php
    }
}